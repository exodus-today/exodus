//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exodus.Domain
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class exodusEntities : DbContext
    {
        public exodusEntities()
            : base("name=exodusEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<stp_AccountTypes_Result> stp_AccountTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_AccountTypes_Result>("stp_AccountTypes");
        }
    
        public virtual ObjectResult<stp_App_Settings_Read_Result> stp_App_Settings_Read(Nullable<long> tagID, Nullable<int> appID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_App_Settings_Read_Result>("stp_App_Settings_Read", tagIDParameter, appIDParameter);
        }
    
        public virtual int stp_App_Settings_Write(Nullable<long> tagID, Nullable<int> appID, string setting, ObjectParameter settingID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            var settingParameter = setting != null ?
                new ObjectParameter("Setting", setting) :
                new ObjectParameter("Setting", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_App_Settings_Write", tagIDParameter, appIDParameter, settingParameter, settingID);
        }
    
        public virtual ObjectResult<stp_Application_ByID_Result> stp_Application_ByID(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Application_ByID_Result>("stp_Application_ByID", applicationIDParameter);
        }
    
        public virtual ObjectResult<stp_Application_GetList_Result> stp_Application_GetList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Application_GetList_Result>("stp_Application_GetList");
        }
    
        public virtual ObjectResult<stp_BankNames_Result> stp_BankNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_BankNames_Result>("stp_BankNames");
        }
    
        public virtual int stp_Check_Objects_ByID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Check_Objects_ByID");
        }
    
        public virtual int stp_CreditCard_Add(Nullable<long> userID, Nullable<long> cardTypeID, Nullable<long> bankID, string cardNumber, Nullable<System.DateTime> cardValidTill, string cardAdditionalInfo, ObjectParameter result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("CardTypeID", cardTypeID) :
                new ObjectParameter("CardTypeID", typeof(long));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(long));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("CardNumber", cardNumber) :
                new ObjectParameter("CardNumber", typeof(string));
    
            var cardValidTillParameter = cardValidTill.HasValue ?
                new ObjectParameter("CardValidTill", cardValidTill) :
                new ObjectParameter("CardValidTill", typeof(System.DateTime));
    
            var cardAdditionalInfoParameter = cardAdditionalInfo != null ?
                new ObjectParameter("CardAdditionalInfo", cardAdditionalInfo) :
                new ObjectParameter("CardAdditionalInfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_CreditCard_Add", userIDParameter, cardTypeIDParameter, bankIDParameter, cardNumberParameter, cardValidTillParameter, cardAdditionalInfoParameter, result);
        }
    
        public virtual int stp_CreditCard_Delete(Nullable<long> creditCardID, ObjectParameter result)
        {
            var creditCardIDParameter = creditCardID.HasValue ?
                new ObjectParameter("CreditCardID", creditCardID) :
                new ObjectParameter("CreditCardID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_CreditCard_Delete", creditCardIDParameter, result);
        }
    
        public virtual int stp_CreditCard_Update(Nullable<long> creditCardID, Nullable<long> cardTypeID, Nullable<long> bankID, string cardNumber, Nullable<System.DateTime> cardValidTill, string cardAdditionalInfo, ObjectParameter result)
        {
            var creditCardIDParameter = creditCardID.HasValue ?
                new ObjectParameter("CreditCardID", creditCardID) :
                new ObjectParameter("CreditCardID", typeof(long));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("CardTypeID", cardTypeID) :
                new ObjectParameter("CardTypeID", typeof(long));
    
            var bankIDParameter = bankID.HasValue ?
                new ObjectParameter("BankID", bankID) :
                new ObjectParameter("BankID", typeof(long));
    
            var cardNumberParameter = cardNumber != null ?
                new ObjectParameter("CardNumber", cardNumber) :
                new ObjectParameter("CardNumber", typeof(string));
    
            var cardValidTillParameter = cardValidTill.HasValue ?
                new ObjectParameter("CardValidTill", cardValidTill) :
                new ObjectParameter("CardValidTill", typeof(System.DateTime));
    
            var cardAdditionalInfoParameter = cardAdditionalInfo != null ?
                new ObjectParameter("CardAdditionalInfo", cardAdditionalInfo) :
                new ObjectParameter("CardAdditionalInfo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_CreditCard_Update", creditCardIDParameter, cardTypeIDParameter, bankIDParameter, cardNumberParameter, cardValidTillParameter, cardAdditionalInfoParameter, result);
        }
    
        public virtual ObjectResult<stp_CreditCards_ByUserID_Result> stp_CreditCards_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_CreditCards_ByUserID_Result>("stp_CreditCards_ByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<stp_CreditCardTypes_Result> stp_CreditCardTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_CreditCardTypes_Result>("stp_CreditCardTypes");
        }
    
        public virtual int stp_Event_Add(Nullable<long> eventTypeID, string eventTitle, string eventContent, string eventThumbnail, Nullable<long> tagID, Nullable<int> applicationID, ObjectParameter eventID)
        {
            var eventTypeIDParameter = eventTypeID.HasValue ?
                new ObjectParameter("EventTypeID", eventTypeID) :
                new ObjectParameter("EventTypeID", typeof(long));
    
            var eventTitleParameter = eventTitle != null ?
                new ObjectParameter("EventTitle", eventTitle) :
                new ObjectParameter("EventTitle", typeof(string));
    
            var eventContentParameter = eventContent != null ?
                new ObjectParameter("EventContent", eventContent) :
                new ObjectParameter("EventContent", typeof(string));
    
            var eventThumbnailParameter = eventThumbnail != null ?
                new ObjectParameter("EventThumbnail", eventThumbnail) :
                new ObjectParameter("EventThumbnail", typeof(string));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Event_Add", eventTypeIDParameter, eventTitleParameter, eventContentParameter, eventThumbnailParameter, tagIDParameter, applicationIDParameter, eventID);
        }
    
        public virtual ObjectResult<stp_Event_ByID_Result> stp_Event_ByID(Nullable<long> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_ByID_Result>("stp_Event_ByID", eventIDParameter);
        }
    
        public virtual ObjectResult<stp_Event_GetEventTypes_Result> stp_Event_GetEventTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_GetEventTypes_Result>("stp_Event_GetEventTypes");
        }
    
        public virtual int stp_Event_MarkETU_Processed(Nullable<long> eventID, Nullable<long> userID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Event_MarkETU_Processed", eventIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<stp_Event_Single_ByUserID_Result> stp_Event_Single_ByUserID(Nullable<long> userID, Nullable<long> eventID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Event_Single_ByUserID_Result>("stp_Event_Single_ByUserID", userIDParameter, eventIDParameter);
        }
    
        public virtual int stp_Event_ToUsers_Add()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Event_ToUsers_Add");
        }
    
        public virtual int stp_EventDeleteByID(Nullable<long> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_EventDeleteByID", eventIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> stp_EventListID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("stp_EventListID");
        }
    
        public virtual ObjectResult<stp_EventTemplate_ByEventTypeID_Result> stp_EventTemplate_ByEventTypeID(Nullable<long> eventTypeID)
        {
            var eventTypeIDParameter = eventTypeID.HasValue ?
                new ObjectParameter("EventTypeID", eventTypeID) :
                new ObjectParameter("EventTypeID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_EventTemplate_ByEventTypeID_Result>("stp_EventTemplate_ByEventTypeID", eventTypeIDParameter);
        }
    
        public virtual ObjectResult<stp_EventTemplate_ByID_Result> stp_EventTemplate_ByID(Nullable<long> eventTemplateID)
        {
            var eventTemplateIDParameter = eventTemplateID.HasValue ?
                new ObjectParameter("EventTemplateID", eventTemplateID) :
                new ObjectParameter("EventTemplateID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_EventTemplate_ByID_Result>("stp_EventTemplate_ByID", eventTemplateIDParameter);
        }
    
        public virtual int stp_EventUpdate_Thumbnail(Nullable<long> eventID, string thumbnail)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("Thumbnail", thumbnail) :
                new ObjectParameter("Thumbnail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_EventUpdate_Thumbnail", eventIDParameter, thumbnailParameter);
        }
    
        public virtual ObjectResult<stp_GetBankNamesByCardNumber_Result> stp_GetBankNamesByCardNumber(string number)
        {
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_GetBankNamesByCardNumber_Result>("stp_GetBankNamesByCardNumber", numberParameter);
        }
    
        public virtual ObjectResult<stp_GetCreditCardByID_Result> stp_GetCreditCardByID(Nullable<int> cardID)
        {
            var cardIDParameter = cardID.HasValue ?
                new ObjectParameter("CardID", cardID) :
                new ObjectParameter("CardID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_GetCreditCardByID_Result>("stp_GetCreditCardByID", cardIDParameter);
        }
    
        public virtual ObjectResult<stp_GetUserRelations_ByUserID_Result> stp_GetUserRelations_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_GetUserRelations_ByUserID_Result>("stp_GetUserRelations_ByUserID", userIDParameter);
        }
    
        public virtual int stp_H2O_Intentions_ByUserID_CurrentMonth(Nullable<long> userID, Nullable<int> targetCurrency, ObjectParameter intentionAmount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var targetCurrencyParameter = targetCurrency.HasValue ?
                new ObjectParameter("TargetCurrency", targetCurrency) :
                new ObjectParameter("TargetCurrency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_H2O_Intentions_ByUserID_CurrentMonth", userIDParameter, targetCurrencyParameter, intentionAmount);
        }
    
        public virtual int stp_H2O_Intentions_ByUserID_n_Month(Nullable<long> userID, Nullable<System.DateTime> month_n_Year, Nullable<int> targetCurrency, ObjectParameter intentionAmount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var month_n_YearParameter = month_n_Year.HasValue ?
                new ObjectParameter("Month_n_Year", month_n_Year) :
                new ObjectParameter("Month_n_Year", typeof(System.DateTime));
    
            var targetCurrencyParameter = targetCurrency.HasValue ?
                new ObjectParameter("TargetCurrency", targetCurrency) :
                new ObjectParameter("TargetCurrency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_H2O_Intentions_ByUserID_n_Month", userIDParameter, month_n_YearParameter, targetCurrencyParameter, intentionAmount);
        }
    
        public virtual int stp_H2O_Obligations_ByUserID_CurrentMonth(Nullable<long> userID, Nullable<int> targetCurrency, ObjectParameter obligationAmount)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var targetCurrencyParameter = targetCurrency.HasValue ?
                new ObjectParameter("TargetCurrency", targetCurrency) :
                new ObjectParameter("TargetCurrency", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_H2O_Obligations_ByUserID_CurrentMonth", userIDParameter, targetCurrencyParameter, obligationAmount);
        }
    
        public virtual int stp_Intention_Add(Nullable<int> obligationTypeID, Nullable<long> obligationKindID, Nullable<int> periodID, Nullable<int> intentionTermID, Nullable<long> issuerUserID, Nullable<long> holderUserID, Nullable<long> tagID, Nullable<int> applicationID, Nullable<decimal> intentionAmount, Nullable<int> currencyID, Nullable<int> intentionDurationMonths, Nullable<System.DateTime> intentionStartDate, Nullable<System.DateTime> intentionEndDate, Nullable<bool> intentionIsActive, Nullable<int> dayOfMonth, Nullable<int> dayOfWeek, string intentionMemo, ObjectParameter intentionID)
        {
            var obligationTypeIDParameter = obligationTypeID.HasValue ?
                new ObjectParameter("ObligationTypeID", obligationTypeID) :
                new ObjectParameter("ObligationTypeID", typeof(int));
    
            var obligationKindIDParameter = obligationKindID.HasValue ?
                new ObjectParameter("ObligationKindID", obligationKindID) :
                new ObjectParameter("ObligationKindID", typeof(long));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var intentionTermIDParameter = intentionTermID.HasValue ?
                new ObjectParameter("IntentionTermID", intentionTermID) :
                new ObjectParameter("IntentionTermID", typeof(int));
    
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var intentionAmountParameter = intentionAmount.HasValue ?
                new ObjectParameter("IntentionAmount", intentionAmount) :
                new ObjectParameter("IntentionAmount", typeof(decimal));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var intentionDurationMonthsParameter = intentionDurationMonths.HasValue ?
                new ObjectParameter("IntentionDurationMonths", intentionDurationMonths) :
                new ObjectParameter("IntentionDurationMonths", typeof(int));
    
            var intentionStartDateParameter = intentionStartDate.HasValue ?
                new ObjectParameter("IntentionStartDate", intentionStartDate) :
                new ObjectParameter("IntentionStartDate", typeof(System.DateTime));
    
            var intentionEndDateParameter = intentionEndDate.HasValue ?
                new ObjectParameter("IntentionEndDate", intentionEndDate) :
                new ObjectParameter("IntentionEndDate", typeof(System.DateTime));
    
            var intentionIsActiveParameter = intentionIsActive.HasValue ?
                new ObjectParameter("IntentionIsActive", intentionIsActive) :
                new ObjectParameter("IntentionIsActive", typeof(bool));
    
            var dayOfMonthParameter = dayOfMonth.HasValue ?
                new ObjectParameter("DayOfMonth", dayOfMonth) :
                new ObjectParameter("DayOfMonth", typeof(int));
    
            var dayOfWeekParameter = dayOfWeek.HasValue ?
                new ObjectParameter("DayOfWeek", dayOfWeek) :
                new ObjectParameter("DayOfWeek", typeof(int));
    
            var intentionMemoParameter = intentionMemo != null ?
                new ObjectParameter("IntentionMemo", intentionMemo) :
                new ObjectParameter("IntentionMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Intention_Add", obligationTypeIDParameter, obligationKindIDParameter, periodIDParameter, intentionTermIDParameter, issuerUserIDParameter, holderUserIDParameter, tagIDParameter, applicationIDParameter, intentionAmountParameter, currencyIDParameter, intentionDurationMonthsParameter, intentionStartDateParameter, intentionEndDateParameter, intentionIsActiveParameter, dayOfMonthParameter, dayOfWeekParameter, intentionMemoParameter, intentionID);
        }
    
        public virtual ObjectResult<stp_Intention_ByID_Result> stp_Intention_ByID(Nullable<long> intentionID)
        {
            var intentionIDParameter = intentionID.HasValue ?
                new ObjectParameter("IntentionID", intentionID) :
                new ObjectParameter("IntentionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intention_ByID_Result>("stp_Intention_ByID", intentionIDParameter);
        }
    
        public virtual ObjectResult<stp_Intention_ByTagID_Result> stp_Intention_ByTagID(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intention_ByTagID_Result>("stp_Intention_ByTagID", tagIDParameter);
        }
    
        public virtual ObjectResult<stp_Intention_ByUserIssuerID_ByTagID_Result> stp_Intention_ByUserIssuerID_ByTagID(Nullable<long> tagID, Nullable<long> issuerUserID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intention_ByUserIssuerID_ByTagID_Result>("stp_Intention_ByUserIssuerID_ByTagID", tagIDParameter, issuerUserIDParameter);
        }
    
        public virtual int stp_Intention_Delete_ByID(Nullable<long> intentionID)
        {
            var intentionIDParameter = intentionID.HasValue ?
                new ObjectParameter("IntentionID", intentionID) :
                new ObjectParameter("IntentionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Intention_Delete_ByID", intentionIDParameter);
        }
    
        public virtual int stp_Intention_To_Obligation(Nullable<long> intentionID, ObjectParameter obligationID)
        {
            var intentionIDParameter = intentionID.HasValue ?
                new ObjectParameter("IntentionID", intentionID) :
                new ObjectParameter("IntentionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Intention_To_Obligation", intentionIDParameter, obligationID);
        }
    
        public virtual int stp_Intention_Update(Nullable<int> obligationTypeID, Nullable<long> obligationKindID, Nullable<int> periodID, Nullable<int> intentionTermID, Nullable<long> issuerUserID, Nullable<long> holderUserID, Nullable<long> tagID, Nullable<int> applicationID, Nullable<decimal> intentionAmount, Nullable<int> currencyID, Nullable<int> intentionDurationMonths, Nullable<System.DateTime> intentionStartDate, Nullable<System.DateTime> intentionEndDate, Nullable<bool> intentionIsActive, Nullable<int> dayOfMonth, Nullable<int> dayOfWeek, string intentionMemo, Nullable<long> intentionID, ObjectParameter result)
        {
            var obligationTypeIDParameter = obligationTypeID.HasValue ?
                new ObjectParameter("ObligationTypeID", obligationTypeID) :
                new ObjectParameter("ObligationTypeID", typeof(int));
    
            var obligationKindIDParameter = obligationKindID.HasValue ?
                new ObjectParameter("ObligationKindID", obligationKindID) :
                new ObjectParameter("ObligationKindID", typeof(long));
    
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var intentionTermIDParameter = intentionTermID.HasValue ?
                new ObjectParameter("IntentionTermID", intentionTermID) :
                new ObjectParameter("IntentionTermID", typeof(int));
    
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var intentionAmountParameter = intentionAmount.HasValue ?
                new ObjectParameter("IntentionAmount", intentionAmount) :
                new ObjectParameter("IntentionAmount", typeof(decimal));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var intentionDurationMonthsParameter = intentionDurationMonths.HasValue ?
                new ObjectParameter("IntentionDurationMonths", intentionDurationMonths) :
                new ObjectParameter("IntentionDurationMonths", typeof(int));
    
            var intentionStartDateParameter = intentionStartDate.HasValue ?
                new ObjectParameter("IntentionStartDate", intentionStartDate) :
                new ObjectParameter("IntentionStartDate", typeof(System.DateTime));
    
            var intentionEndDateParameter = intentionEndDate.HasValue ?
                new ObjectParameter("IntentionEndDate", intentionEndDate) :
                new ObjectParameter("IntentionEndDate", typeof(System.DateTime));
    
            var intentionIsActiveParameter = intentionIsActive.HasValue ?
                new ObjectParameter("IntentionIsActive", intentionIsActive) :
                new ObjectParameter("IntentionIsActive", typeof(bool));
    
            var dayOfMonthParameter = dayOfMonth.HasValue ?
                new ObjectParameter("DayOfMonth", dayOfMonth) :
                new ObjectParameter("DayOfMonth", typeof(int));
    
            var dayOfWeekParameter = dayOfWeek.HasValue ?
                new ObjectParameter("DayOfWeek", dayOfWeek) :
                new ObjectParameter("DayOfWeek", typeof(int));
    
            var intentionMemoParameter = intentionMemo != null ?
                new ObjectParameter("IntentionMemo", intentionMemo) :
                new ObjectParameter("IntentionMemo", typeof(string));
    
            var intentionIDParameter = intentionID.HasValue ?
                new ObjectParameter("IntentionID", intentionID) :
                new ObjectParameter("IntentionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Intention_Update", obligationTypeIDParameter, obligationKindIDParameter, periodIDParameter, intentionTermIDParameter, issuerUserIDParameter, holderUserIDParameter, tagIDParameter, applicationIDParameter, intentionAmountParameter, currencyIDParameter, intentionDurationMonthsParameter, intentionStartDateParameter, intentionEndDateParameter, intentionIsActiveParameter, dayOfMonthParameter, dayOfWeekParameter, intentionMemoParameter, intentionIDParameter, result);
        }
    
        public virtual ObjectResult<stp_Intentions_All_ByHolderID_Result> stp_Intentions_All_ByHolderID(Nullable<long> holderUserID)
        {
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intentions_All_ByHolderID_Result>("stp_Intentions_All_ByHolderID", holderUserIDParameter);
        }
    
        public virtual ObjectResult<stp_Intentions_All_ByIssuerID_Result> stp_Intentions_All_ByIssuerID(Nullable<long> issuerUserID)
        {
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intentions_All_ByIssuerID_Result>("stp_Intentions_All_ByIssuerID", issuerUserIDParameter);
        }
    
        public virtual ObjectResult<stp_Intentions_ByUserPublicProfile_Result> stp_Intentions_ByUserPublicProfile(Nullable<long> holderUserID, Nullable<long> issuerUserID)
        {
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Intentions_ByUserPublicProfile_Result>("stp_Intentions_ByUserPublicProfile", holderUserIDParameter, issuerUserIDParameter);
        }
    
        public virtual ObjectResult<stp_Obligation_ByID_Result> stp_Obligation_ByID(Nullable<long> obligationID)
        {
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligation_ByID_Result>("stp_Obligation_ByID", obligationIDParameter);
        }
    
        public virtual ObjectResult<stp_Obligation_ByTagID_Result> stp_Obligation_ByTagID(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligation_ByTagID_Result>("stp_Obligation_ByTagID", tagIDParameter);
        }
    
        public virtual ObjectResult<stp_Obligation_KindDefault_ByAppID_Result> stp_Obligation_KindDefault_ByAppID(Nullable<int> appID)
        {
            var appIDParameter = appID.HasValue ?
                new ObjectParameter("AppID", appID) :
                new ObjectParameter("AppID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligation_KindDefault_ByAppID_Result>("stp_Obligation_KindDefault_ByAppID", appIDParameter);
        }
    
        public virtual int stp_Obligation_Routing_Add(Nullable<long> obligationID, Nullable<int> routingTypeID, Nullable<long> routedBy_UserID, Nullable<long> routedTo_UserID, Nullable<int> transferTypeID, Nullable<int> accountTypeID, Nullable<long> accountID, string accountCustomDetails, Nullable<long> transfer_UserID, string transferUserCustomDetails, Nullable<decimal> transferAmount, Nullable<int> transferAmountCurrency, Nullable<System.DateTime> desiredEndDate, ObjectParameter routingID)
        {
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            var routingTypeIDParameter = routingTypeID.HasValue ?
                new ObjectParameter("RoutingTypeID", routingTypeID) :
                new ObjectParameter("RoutingTypeID", typeof(int));
    
            var routedBy_UserIDParameter = routedBy_UserID.HasValue ?
                new ObjectParameter("RoutedBy_UserID", routedBy_UserID) :
                new ObjectParameter("RoutedBy_UserID", typeof(long));
    
            var routedTo_UserIDParameter = routedTo_UserID.HasValue ?
                new ObjectParameter("RoutedTo_UserID", routedTo_UserID) :
                new ObjectParameter("RoutedTo_UserID", typeof(long));
    
            var transferTypeIDParameter = transferTypeID.HasValue ?
                new ObjectParameter("TransferTypeID", transferTypeID) :
                new ObjectParameter("TransferTypeID", typeof(int));
    
            var accountTypeIDParameter = accountTypeID.HasValue ?
                new ObjectParameter("AccountTypeID", accountTypeID) :
                new ObjectParameter("AccountTypeID", typeof(int));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            var accountCustomDetailsParameter = accountCustomDetails != null ?
                new ObjectParameter("AccountCustomDetails", accountCustomDetails) :
                new ObjectParameter("AccountCustomDetails", typeof(string));
    
            var transfer_UserIDParameter = transfer_UserID.HasValue ?
                new ObjectParameter("Transfer_UserID", transfer_UserID) :
                new ObjectParameter("Transfer_UserID", typeof(long));
    
            var transferUserCustomDetailsParameter = transferUserCustomDetails != null ?
                new ObjectParameter("TransferUserCustomDetails", transferUserCustomDetails) :
                new ObjectParameter("TransferUserCustomDetails", typeof(string));
    
            var transferAmountParameter = transferAmount.HasValue ?
                new ObjectParameter("TransferAmount", transferAmount) :
                new ObjectParameter("TransferAmount", typeof(decimal));
    
            var transferAmountCurrencyParameter = transferAmountCurrency.HasValue ?
                new ObjectParameter("TransferAmountCurrency", transferAmountCurrency) :
                new ObjectParameter("TransferAmountCurrency", typeof(int));
    
            var desiredEndDateParameter = desiredEndDate.HasValue ?
                new ObjectParameter("DesiredEndDate", desiredEndDate) :
                new ObjectParameter("DesiredEndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Obligation_Routing_Add", obligationIDParameter, routingTypeIDParameter, routedBy_UserIDParameter, routedTo_UserIDParameter, transferTypeIDParameter, accountTypeIDParameter, accountIDParameter, accountCustomDetailsParameter, transfer_UserIDParameter, transferUserCustomDetailsParameter, transferAmountParameter, transferAmountCurrencyParameter, desiredEndDateParameter, routingID);
        }
    
        public virtual int stp_ObligationAdd(Nullable<long> obligationKindID, Nullable<int> currencyID, Nullable<decimal> amountPerPayment, Nullable<decimal> amountDue, Nullable<decimal> amountTotal, Nullable<bool> isActive, Nullable<int> obligationPeriodID, Nullable<System.DateTime> obligationDate, Nullable<System.DateTime> obligationExpiration, Nullable<long> obligationClassID, Nullable<int> obligationStatusID, Nullable<int> obligationTypeID, Nullable<long> tagID, Nullable<int> applicationID, Nullable<long> issuerUserID, Nullable<long> holderUserID, Nullable<long> intentionID, ObjectParameter obligationID)
        {
            var obligationKindIDParameter = obligationKindID.HasValue ?
                new ObjectParameter("ObligationKindID", obligationKindID) :
                new ObjectParameter("ObligationKindID", typeof(long));
    
            var currencyIDParameter = currencyID.HasValue ?
                new ObjectParameter("CurrencyID", currencyID) :
                new ObjectParameter("CurrencyID", typeof(int));
    
            var amountPerPaymentParameter = amountPerPayment.HasValue ?
                new ObjectParameter("AmountPerPayment", amountPerPayment) :
                new ObjectParameter("AmountPerPayment", typeof(decimal));
    
            var amountDueParameter = amountDue.HasValue ?
                new ObjectParameter("AmountDue", amountDue) :
                new ObjectParameter("AmountDue", typeof(decimal));
    
            var amountTotalParameter = amountTotal.HasValue ?
                new ObjectParameter("AmountTotal", amountTotal) :
                new ObjectParameter("AmountTotal", typeof(decimal));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var obligationPeriodIDParameter = obligationPeriodID.HasValue ?
                new ObjectParameter("ObligationPeriodID", obligationPeriodID) :
                new ObjectParameter("ObligationPeriodID", typeof(int));
    
            var obligationDateParameter = obligationDate.HasValue ?
                new ObjectParameter("ObligationDate", obligationDate) :
                new ObjectParameter("ObligationDate", typeof(System.DateTime));
    
            var obligationExpirationParameter = obligationExpiration.HasValue ?
                new ObjectParameter("ObligationExpiration", obligationExpiration) :
                new ObjectParameter("ObligationExpiration", typeof(System.DateTime));
    
            var obligationClassIDParameter = obligationClassID.HasValue ?
                new ObjectParameter("ObligationClassID", obligationClassID) :
                new ObjectParameter("ObligationClassID", typeof(long));
    
            var obligationStatusIDParameter = obligationStatusID.HasValue ?
                new ObjectParameter("ObligationStatusID", obligationStatusID) :
                new ObjectParameter("ObligationStatusID", typeof(int));
    
            var obligationTypeIDParameter = obligationTypeID.HasValue ?
                new ObjectParameter("ObligationTypeID", obligationTypeID) :
                new ObjectParameter("ObligationTypeID", typeof(int));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            var intentionIDParameter = intentionID.HasValue ?
                new ObjectParameter("IntentionID", intentionID) :
                new ObjectParameter("IntentionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_ObligationAdd", obligationKindIDParameter, currencyIDParameter, amountPerPaymentParameter, amountDueParameter, amountTotalParameter, isActiveParameter, obligationPeriodIDParameter, obligationDateParameter, obligationExpirationParameter, obligationClassIDParameter, obligationStatusIDParameter, obligationTypeIDParameter, tagIDParameter, applicationIDParameter, issuerUserIDParameter, holderUserIDParameter, intentionIDParameter, obligationID);
        }
    
        public virtual ObjectResult<stp_Obligations_All_ByHolderID_Result> stp_Obligations_All_ByHolderID(Nullable<long> holderUserID)
        {
            var holderUserIDParameter = holderUserID.HasValue ?
                new ObjectParameter("HolderUserID", holderUserID) :
                new ObjectParameter("HolderUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligations_All_ByHolderID_Result>("stp_Obligations_All_ByHolderID", holderUserIDParameter);
        }
    
        public virtual ObjectResult<stp_Obligations_All_ByIssuerID_Result> stp_Obligations_All_ByIssuerID(Nullable<long> issuerUserID)
        {
            var issuerUserIDParameter = issuerUserID.HasValue ?
                new ObjectParameter("IssuerUserID", issuerUserID) :
                new ObjectParameter("IssuerUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligations_All_ByIssuerID_Result>("stp_Obligations_All_ByIssuerID", issuerUserIDParameter);
        }
    
        public virtual ObjectResult<stp_Search_Tag_ByString_Result> stp_Search_Tag_ByString(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Search_Tag_ByString_Result>("stp_Search_Tag_ByString", searchStringParameter);
        }
    
        public virtual ObjectResult<stp_Search_User_ByString_Result> stp_Search_User_ByString(string searchString)
        {
            var searchStringParameter = searchString != null ?
                new ObjectParameter("SearchString", searchString) :
                new ObjectParameter("SearchString", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Search_User_ByString_Result>("stp_Search_User_ByString", searchStringParameter);
        }
    
        public virtual int stp_Tag_Add(Nullable<long> tagOwnerID, Nullable<long> tagTypeID, Nullable<int> tagAccessTypeID, string tagNameEng, string tagNameRus, string tagDescription, Nullable<int> tagPeriod, Nullable<System.DateTime> tagEndDate, Nullable<int> tagDayOfMonth, Nullable<int> tagDayOfWeek, Nullable<int> tagApplicationID, Nullable<decimal> tagTotalAmount, Nullable<int> tagTotalAmountCurrencyID, Nullable<decimal> tagMinIntentionAmount, Nullable<int> tagMinIntentionCurrencyID, Nullable<long> defaultIntentionOwnerID, ObjectParameter tagID)
        {
            var tagOwnerIDParameter = tagOwnerID.HasValue ?
                new ObjectParameter("TagOwnerID", tagOwnerID) :
                new ObjectParameter("TagOwnerID", typeof(long));
    
            var tagTypeIDParameter = tagTypeID.HasValue ?
                new ObjectParameter("TagTypeID", tagTypeID) :
                new ObjectParameter("TagTypeID", typeof(long));
    
            var tagAccessTypeIDParameter = tagAccessTypeID.HasValue ?
                new ObjectParameter("TagAccessTypeID", tagAccessTypeID) :
                new ObjectParameter("TagAccessTypeID", typeof(int));
    
            var tagNameEngParameter = tagNameEng != null ?
                new ObjectParameter("TagNameEng", tagNameEng) :
                new ObjectParameter("TagNameEng", typeof(string));
    
            var tagNameRusParameter = tagNameRus != null ?
                new ObjectParameter("TagNameRus", tagNameRus) :
                new ObjectParameter("TagNameRus", typeof(string));
    
            var tagDescriptionParameter = tagDescription != null ?
                new ObjectParameter("TagDescription", tagDescription) :
                new ObjectParameter("TagDescription", typeof(string));
    
            var tagPeriodParameter = tagPeriod.HasValue ?
                new ObjectParameter("TagPeriod", tagPeriod) :
                new ObjectParameter("TagPeriod", typeof(int));
    
            var tagEndDateParameter = tagEndDate.HasValue ?
                new ObjectParameter("TagEndDate", tagEndDate) :
                new ObjectParameter("TagEndDate", typeof(System.DateTime));
    
            var tagDayOfMonthParameter = tagDayOfMonth.HasValue ?
                new ObjectParameter("TagDayOfMonth", tagDayOfMonth) :
                new ObjectParameter("TagDayOfMonth", typeof(int));
    
            var tagDayOfWeekParameter = tagDayOfWeek.HasValue ?
                new ObjectParameter("TagDayOfWeek", tagDayOfWeek) :
                new ObjectParameter("TagDayOfWeek", typeof(int));
    
            var tagApplicationIDParameter = tagApplicationID.HasValue ?
                new ObjectParameter("TagApplicationID", tagApplicationID) :
                new ObjectParameter("TagApplicationID", typeof(int));
    
            var tagTotalAmountParameter = tagTotalAmount.HasValue ?
                new ObjectParameter("TagTotalAmount", tagTotalAmount) :
                new ObjectParameter("TagTotalAmount", typeof(decimal));
    
            var tagTotalAmountCurrencyIDParameter = tagTotalAmountCurrencyID.HasValue ?
                new ObjectParameter("TagTotalAmountCurrencyID", tagTotalAmountCurrencyID) :
                new ObjectParameter("TagTotalAmountCurrencyID", typeof(int));
    
            var tagMinIntentionAmountParameter = tagMinIntentionAmount.HasValue ?
                new ObjectParameter("TagMinIntentionAmount", tagMinIntentionAmount) :
                new ObjectParameter("TagMinIntentionAmount", typeof(decimal));
    
            var tagMinIntentionCurrencyIDParameter = tagMinIntentionCurrencyID.HasValue ?
                new ObjectParameter("TagMinIntentionCurrencyID", tagMinIntentionCurrencyID) :
                new ObjectParameter("TagMinIntentionCurrencyID", typeof(int));
    
            var defaultIntentionOwnerIDParameter = defaultIntentionOwnerID.HasValue ?
                new ObjectParameter("DefaultIntentionOwnerID", defaultIntentionOwnerID) :
                new ObjectParameter("DefaultIntentionOwnerID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Tag_Add", tagOwnerIDParameter, tagTypeIDParameter, tagAccessTypeIDParameter, tagNameEngParameter, tagNameRusParameter, tagDescriptionParameter, tagPeriodParameter, tagEndDateParameter, tagDayOfMonthParameter, tagDayOfWeekParameter, tagApplicationIDParameter, tagTotalAmountParameter, tagTotalAmountCurrencyIDParameter, tagMinIntentionAmountParameter, tagMinIntentionCurrencyIDParameter, defaultIntentionOwnerIDParameter, tagID);
        }
    
        public virtual ObjectResult<stp_Tag_ByID_Result> stp_Tag_ByID(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Tag_ByID_Result>("stp_Tag_ByID", tagIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> stp_Tag_GelAllId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("stp_Tag_GelAllId");
        }
    
        public virtual int stp_Tag_UserAdd(Nullable<long> userID, Nullable<long> tagID, Nullable<int> tagRoleID, ObjectParameter ttu_ID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var tagRoleIDParameter = tagRoleID.HasValue ?
                new ObjectParameter("TagRoleID", tagRoleID) :
                new ObjectParameter("TagRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Tag_UserAdd", userIDParameter, tagIDParameter, tagRoleIDParameter, ttu_ID);
        }
    
        public virtual int stp_Tag_UserRemove(Nullable<long> userID, Nullable<long> tagID, ObjectParameter result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Tag_UserRemove", userIDParameter, tagIDParameter, result);
        }
    
        public virtual ObjectResult<stp_Tags_OwnedByUserID_Result> stp_Tags_OwnedByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Tags_OwnedByUserID_Result>("stp_Tags_OwnedByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<stp_TagsCommon_Result> stp_TagsCommon(Nullable<long> userID, Nullable<long> commonUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var commonUserIDParameter = commonUserID.HasValue ?
                new ObjectParameter("CommonUserID", commonUserID) :
                new ObjectParameter("CommonUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_TagsCommon_Result>("stp_TagsCommon", userIDParameter, commonUserIDParameter);
        }
    
        public virtual ObjectResult<stp_TagsPublic_ByUserID_Result> stp_TagsPublic_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_TagsPublic_ByUserID_Result>("stp_TagsPublic_ByUserID", userIDParameter);
        }
    
        public virtual int stp_Transaction_Add(Nullable<decimal> transactionAmount, Nullable<int> transactionCurrencyID, Nullable<long> transactionSender_UserID, Nullable<long> transactionReceiver_UserID, Nullable<long> tagID, Nullable<int> applicationID, Nullable<long> obligationID, Nullable<bool> isConfirmed, Nullable<bool> isConfirmedBySender, Nullable<bool> isConfirmedByReceiver, Nullable<System.DateTime> transactionDateTime, Nullable<long> transactionAccountID, Nullable<int> transferTypeID, string transactionMemo, ObjectParameter transactionID)
        {
            var transactionAmountParameter = transactionAmount.HasValue ?
                new ObjectParameter("TransactionAmount", transactionAmount) :
                new ObjectParameter("TransactionAmount", typeof(decimal));
    
            var transactionCurrencyIDParameter = transactionCurrencyID.HasValue ?
                new ObjectParameter("TransactionCurrencyID", transactionCurrencyID) :
                new ObjectParameter("TransactionCurrencyID", typeof(int));
    
            var transactionSender_UserIDParameter = transactionSender_UserID.HasValue ?
                new ObjectParameter("TransactionSender_UserID", transactionSender_UserID) :
                new ObjectParameter("TransactionSender_UserID", typeof(long));
    
            var transactionReceiver_UserIDParameter = transactionReceiver_UserID.HasValue ?
                new ObjectParameter("TransactionReceiver_UserID", transactionReceiver_UserID) :
                new ObjectParameter("TransactionReceiver_UserID", typeof(long));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            var isConfirmedParameter = isConfirmed.HasValue ?
                new ObjectParameter("isConfirmed", isConfirmed) :
                new ObjectParameter("isConfirmed", typeof(bool));
    
            var isConfirmedBySenderParameter = isConfirmedBySender.HasValue ?
                new ObjectParameter("isConfirmedBySender", isConfirmedBySender) :
                new ObjectParameter("isConfirmedBySender", typeof(bool));
    
            var isConfirmedByReceiverParameter = isConfirmedByReceiver.HasValue ?
                new ObjectParameter("isConfirmedByReceiver", isConfirmedByReceiver) :
                new ObjectParameter("isConfirmedByReceiver", typeof(bool));
    
            var transactionDateTimeParameter = transactionDateTime.HasValue ?
                new ObjectParameter("TransactionDateTime", transactionDateTime) :
                new ObjectParameter("TransactionDateTime", typeof(System.DateTime));
    
            var transactionAccountIDParameter = transactionAccountID.HasValue ?
                new ObjectParameter("TransactionAccountID", transactionAccountID) :
                new ObjectParameter("TransactionAccountID", typeof(long));
    
            var transferTypeIDParameter = transferTypeID.HasValue ?
                new ObjectParameter("TransferTypeID", transferTypeID) :
                new ObjectParameter("TransferTypeID", typeof(int));
    
            var transactionMemoParameter = transactionMemo != null ?
                new ObjectParameter("TransactionMemo", transactionMemo) :
                new ObjectParameter("TransactionMemo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Transaction_Add", transactionAmountParameter, transactionCurrencyIDParameter, transactionSender_UserIDParameter, transactionReceiver_UserIDParameter, tagIDParameter, applicationIDParameter, obligationIDParameter, isConfirmedParameter, isConfirmedBySenderParameter, isConfirmedByReceiverParameter, transactionDateTimeParameter, transactionAccountIDParameter, transferTypeIDParameter, transactionMemoParameter, transactionID);
        }
    
        public virtual ObjectResult<stp_Transaction_ByID_Result> stp_Transaction_ByID(Nullable<long> transactionID)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Transaction_ByID_Result>("stp_Transaction_ByID", transactionIDParameter);
        }
    
        public virtual int stp_Transaction_Confirm(Nullable<long> transactionID, Nullable<bool> isConfirmedBySender, Nullable<bool> isConfirmedByReceiver)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var isConfirmedBySenderParameter = isConfirmedBySender.HasValue ?
                new ObjectParameter("IsConfirmedBySender", isConfirmedBySender) :
                new ObjectParameter("IsConfirmedBySender", typeof(bool));
    
            var isConfirmedByReceiverParameter = isConfirmedByReceiver.HasValue ?
                new ObjectParameter("IsConfirmedByReceiver", isConfirmedByReceiver) :
                new ObjectParameter("IsConfirmedByReceiver", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Transaction_Confirm", transactionIDParameter, isConfirmedBySenderParameter, isConfirmedByReceiverParameter);
        }
    
        public virtual ObjectResult<stp_Transactions_ByTag_Result> stp_Transactions_ByTag(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Transactions_ByTag_Result>("stp_Transactions_ByTag", tagIDParameter);
        }
    
        public virtual ObjectResult<stp_Transactions_ByTagApplication_Result> stp_Transactions_ByTagApplication(Nullable<long> tagID, Nullable<int> applicationID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Transactions_ByTagApplication_Result>("stp_Transactions_ByTagApplication", tagIDParameter, applicationIDParameter);
        }
    
        public virtual ObjectResult<stp_Transactions_ByUserReceiver_Result> stp_Transactions_ByUserReceiver(Nullable<long> userReceiverID)
        {
            var userReceiverIDParameter = userReceiverID.HasValue ?
                new ObjectParameter("UserReceiverID", userReceiverID) :
                new ObjectParameter("UserReceiverID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Transactions_ByUserReceiver_Result>("stp_Transactions_ByUserReceiver", userReceiverIDParameter);
        }
    
        public virtual ObjectResult<stp_Transactions_ByUserSender_Result> stp_Transactions_ByUserSender(Nullable<long> userSenderID)
        {
            var userSenderIDParameter = userSenderID.HasValue ?
                new ObjectParameter("UserSenderID", userSenderID) :
                new ObjectParameter("UserSenderID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Transactions_ByUserSender_Result>("stp_Transactions_ByUserSender", userSenderIDParameter);
        }
    
        public virtual int stp_User_About_Update(Nullable<long> userID, string userAbout)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var userAboutParameter = userAbout != null ?
                new ObjectParameter("UserAbout", userAbout) :
                new ObjectParameter("UserAbout", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_About_Update", userIDParameter, userAboutParameter);
        }
    
        public virtual int stp_User_Account_Add(Nullable<long> userID, Nullable<int> accountTypeID, string accountValue, ObjectParameter accountID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var accountTypeIDParameter = accountTypeID.HasValue ?
                new ObjectParameter("AccountTypeID", accountTypeID) :
                new ObjectParameter("AccountTypeID", typeof(int));
    
            var accountValueParameter = accountValue != null ?
                new ObjectParameter("AccountValue", accountValue) :
                new ObjectParameter("AccountValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Account_Add", userIDParameter, accountTypeIDParameter, accountValueParameter, accountID);
        }
    
        public virtual ObjectResult<stp_User_Account_ByID_Result> stp_User_Account_ByID(Nullable<long> accountID)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_Account_ByID_Result>("stp_User_Account_ByID", accountIDParameter);
        }
    
        public virtual int stp_User_Account_Delete(Nullable<long> accountID, ObjectParameter result)
        {
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Account_Delete", accountIDParameter, result);
        }
    
        public virtual int stp_User_Account_Update(string accountValue, Nullable<long> accountID, ObjectParameter result)
        {
            var accountValueParameter = accountValue != null ?
                new ObjectParameter("AccountValue", accountValue) :
                new ObjectParameter("AccountValue", typeof(string));
    
            var accountIDParameter = accountID.HasValue ?
                new ObjectParameter("AccountID", accountID) :
                new ObjectParameter("AccountID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Account_Update", accountValueParameter, accountIDParameter, result);
        }
    
        public virtual ObjectResult<stp_User_Accounts_ByUserID_Result> stp_User_Accounts_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_Accounts_ByUserID_Result>("stp_User_Accounts_ByUserID", userIDParameter);
        }
    
        public virtual int stp_User_Avatar_Update(string avatarBIG, string avatarSMALL, Nullable<long> userID)
        {
            var avatarBIGParameter = avatarBIG != null ?
                new ObjectParameter("AvatarBIG", avatarBIG) :
                new ObjectParameter("AvatarBIG", typeof(string));
    
            var avatarSMALLParameter = avatarSMALL != null ?
                new ObjectParameter("AvatarSMALL", avatarSMALL) :
                new ObjectParameter("AvatarSMALL", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Avatar_Update", avatarBIGParameter, avatarSMALLParameter, userIDParameter);
        }
    
        public virtual ObjectResult<stp_User_ByEmail_Result> stp_User_ByEmail(string userEmail)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_ByEmail_Result>("stp_User_ByEmail", userEmailParameter);
        }
    
        public virtual ObjectResult<stp_User_ByExternalID_Result> stp_User_ByExternalID(string externalID, Nullable<int> registrationSource)
        {
            var externalIDParameter = externalID != null ?
                new ObjectParameter("ExternalID", externalID) :
                new ObjectParameter("ExternalID", typeof(string));
    
            var registrationSourceParameter = registrationSource.HasValue ?
                new ObjectParameter("RegistrationSource", registrationSource) :
                new ObjectParameter("RegistrationSource", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_ByExternalID_Result>("stp_User_ByExternalID", externalIDParameter, registrationSourceParameter);
        }
    
        public virtual ObjectResult<stp_User_ByGuid_Result> stp_User_ByGuid(string userGuid)
        {
            var userGuidParameter = userGuid != null ?
                new ObjectParameter("UserGuid", userGuid) :
                new ObjectParameter("UserGuid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_ByGuid_Result>("stp_User_ByGuid", userGuidParameter);
        }
    
        public virtual ObjectResult<stp_User_ByID_Result> stp_User_ByID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_ByID_Result>("stp_User_ByID", userIDParameter);
        }
    
        public virtual int stp_User_Check_Existence_ByEmail(string userEmail, ObjectParameter userCount)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Check_Existence_ByEmail", userEmailParameter, userCount);
        }
    
        public virtual int stp_User_Delete_ByID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Delete_ByID", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> stp_User_GelAllId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("stp_User_GelAllId");
        }
    
        public virtual ObjectResult<stp_User_GetAll_Result> stp_User_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_GetAll_Result>("stp_User_GetAll");
        }
    
        public virtual ObjectResult<stp_User_GetAvatarAll_Result> stp_User_GetAvatarAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_User_GetAvatarAll_Result>("stp_User_GetAvatarAll");
        }
    
        public virtual int stp_User_Register(Nullable<long> userInvitedBy, string userLogin, byte[] userPasswordHash, byte[] userPasswordSalt, Nullable<long> hashIterations, string userFirstName, string userLastName, Nullable<int> userTypeID, Nullable<int> userStatusID, string userStatusMessage, string userAbout, Nullable<int> userRegistrationSource, Nullable<long> userFlags, string externalID, ObjectParameter userID)
        {
            var userInvitedByParameter = userInvitedBy.HasValue ?
                new ObjectParameter("UserInvitedBy", userInvitedBy) :
                new ObjectParameter("UserInvitedBy", typeof(long));
    
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var userPasswordHashParameter = userPasswordHash != null ?
                new ObjectParameter("UserPasswordHash", userPasswordHash) :
                new ObjectParameter("UserPasswordHash", typeof(byte[]));
    
            var userPasswordSaltParameter = userPasswordSalt != null ?
                new ObjectParameter("UserPasswordSalt", userPasswordSalt) :
                new ObjectParameter("UserPasswordSalt", typeof(byte[]));
    
            var hashIterationsParameter = hashIterations.HasValue ?
                new ObjectParameter("HashIterations", hashIterations) :
                new ObjectParameter("HashIterations", typeof(long));
    
            var userFirstNameParameter = userFirstName != null ?
                new ObjectParameter("UserFirstName", userFirstName) :
                new ObjectParameter("UserFirstName", typeof(string));
    
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("UserLastName", userLastName) :
                new ObjectParameter("UserLastName", typeof(string));
    
            var userTypeIDParameter = userTypeID.HasValue ?
                new ObjectParameter("UserTypeID", userTypeID) :
                new ObjectParameter("UserTypeID", typeof(int));
    
            var userStatusIDParameter = userStatusID.HasValue ?
                new ObjectParameter("UserStatusID", userStatusID) :
                new ObjectParameter("UserStatusID", typeof(int));
    
            var userStatusMessageParameter = userStatusMessage != null ?
                new ObjectParameter("UserStatusMessage", userStatusMessage) :
                new ObjectParameter("UserStatusMessage", typeof(string));
    
            var userAboutParameter = userAbout != null ?
                new ObjectParameter("UserAbout", userAbout) :
                new ObjectParameter("UserAbout", typeof(string));
    
            var userRegistrationSourceParameter = userRegistrationSource.HasValue ?
                new ObjectParameter("UserRegistrationSource", userRegistrationSource) :
                new ObjectParameter("UserRegistrationSource", typeof(int));
    
            var userFlagsParameter = userFlags.HasValue ?
                new ObjectParameter("UserFlags", userFlags) :
                new ObjectParameter("UserFlags", typeof(long));
    
            var externalIDParameter = externalID != null ?
                new ObjectParameter("ExternalID", externalID) :
                new ObjectParameter("ExternalID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Register", userInvitedByParameter, userLoginParameter, userPasswordHashParameter, userPasswordSaltParameter, hashIterationsParameter, userFirstNameParameter, userLastNameParameter, userTypeIDParameter, userStatusIDParameter, userStatusMessageParameter, userAboutParameter, userRegistrationSourceParameter, userFlagsParameter, externalIDParameter, userID);
        }
    
        public virtual int stp_User_Status_Update(Nullable<long> userID, Nullable<int> userStatusID, Nullable<int> userHelpPeriodID, Nullable<decimal> userHelpAmountRequired, Nullable<int> userHelpAmountCurrencyID, string userHelpDetails, ObjectParameter result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var userStatusIDParameter = userStatusID.HasValue ?
                new ObjectParameter("UserStatusID", userStatusID) :
                new ObjectParameter("UserStatusID", typeof(int));
    
            var userHelpPeriodIDParameter = userHelpPeriodID.HasValue ?
                new ObjectParameter("UserHelpPeriodID", userHelpPeriodID) :
                new ObjectParameter("UserHelpPeriodID", typeof(int));
    
            var userHelpAmountRequiredParameter = userHelpAmountRequired.HasValue ?
                new ObjectParameter("UserHelpAmountRequired", userHelpAmountRequired) :
                new ObjectParameter("UserHelpAmountRequired", typeof(decimal));
    
            var userHelpAmountCurrencyIDParameter = userHelpAmountCurrencyID.HasValue ?
                new ObjectParameter("UserHelpAmountCurrencyID", userHelpAmountCurrencyID) :
                new ObjectParameter("UserHelpAmountCurrencyID", typeof(int));
    
            var userHelpDetailsParameter = userHelpDetails != null ?
                new ObjectParameter("UserHelpDetails", userHelpDetails) :
                new ObjectParameter("UserHelpDetails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Status_Update", userIDParameter, userStatusIDParameter, userHelpPeriodIDParameter, userHelpAmountRequiredParameter, userHelpAmountCurrencyIDParameter, userHelpDetailsParameter, result);
        }
    
        public virtual ObjectResult<stp_UserLoginDetails_ByEmail_Result> stp_UserLoginDetails_ByEmail(string userEmail)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_UserLoginDetails_ByEmail_Result>("stp_UserLoginDetails_ByEmail", userEmailParameter);
        }
    
        public virtual ObjectResult<stp_Users_ByTag_Result> stp_Users_ByTag(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Users_ByTag_Result>("stp_Users_ByTag", tagIDParameter);
        }
    
        public virtual ObjectResult<stp_Users_With_Statuses_ByTag_Result> stp_Users_With_Statuses_ByTag(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Users_With_Statuses_ByTag_Result>("stp_Users_With_Statuses_ByTag", tagIDParameter);
        }
    
        public virtual int stp_Tag_User_GetRole(Nullable<long> tagID, Nullable<long> userID, ObjectParameter tagRole)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Tag_User_GetRole", tagIDParameter, userIDParameter, tagRole);
        }
    
        public virtual int stp_Obligation_Confirm(Nullable<long> obligationID)
        {
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Obligation_Confirm", obligationIDParameter);
        }
    
        public virtual int stp_Obligation_Delete(Nullable<long> obligationID)
        {
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Obligation_Delete", obligationIDParameter);
        }
    
        public virtual ObjectResult<stp_Obligation_Routing_ByObligationID_Result> stp_Obligation_Routing_ByObligationID(Nullable<long> obligationID)
        {
            var obligationIDParameter = obligationID.HasValue ?
                new ObjectParameter("ObligationID", obligationID) :
                new ObjectParameter("ObligationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Obligation_Routing_ByObligationID_Result>("stp_Obligation_Routing_ByObligationID", obligationIDParameter);
        }
    
        public virtual int stp_EventUpdate_XML(Nullable<long> eventID, string thumbnail, string content, Nullable<long> tagID, Nullable<long> applicationID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(long));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("Thumbnail", thumbnail) :
                new ObjectParameter("Thumbnail", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_EventUpdate_XML", eventIDParameter, thumbnailParameter, contentParameter, tagIDParameter, applicationIDParameter);
        }
    
        public virtual int stp_Transaction_Confirm_ByReceiver(Nullable<long> transactionID, Nullable<bool> isConfirmedByReceiver)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var isConfirmedByReceiverParameter = isConfirmedByReceiver.HasValue ?
                new ObjectParameter("IsConfirmedByReceiver", isConfirmedByReceiver) :
                new ObjectParameter("IsConfirmedByReceiver", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Transaction_Confirm_ByReceiver", transactionIDParameter, isConfirmedByReceiverParameter);
        }
    
        public virtual int stp_Transaction_Confirm_BySender(Nullable<long> transactionID, Nullable<bool> isConfirmedBySender)
        {
            var transactionIDParameter = transactionID.HasValue ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(long));
    
            var isConfirmedBySenderParameter = isConfirmedBySender.HasValue ?
                new ObjectParameter("IsConfirmedBySender", isConfirmedBySender) :
                new ObjectParameter("IsConfirmedBySender", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Transaction_Confirm_BySender", transactionIDParameter, isConfirmedBySenderParameter);
        }
    
        public virtual ObjectResult<stp_EventList_ByUserID_Result> stp_EventList_ByUserID(Nullable<long> userID, Nullable<bool> isHideProcessed)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var isHideProcessedParameter = isHideProcessed.HasValue ?
                new ObjectParameter("isHideProcessed", isHideProcessed) :
                new ObjectParameter("isHideProcessed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_EventList_ByUserID_Result>("stp_EventList_ByUserID", userIDParameter, isHideProcessedParameter);
        }
    
        public virtual ObjectResult<stp_Tags_Public_with_UserCount_Result> stp_Tags_Public_with_UserCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Tags_Public_with_UserCount_Result>("stp_Tags_Public_with_UserCount");
        }
    
        public virtual ObjectResult<stp_GetPaymentAccountByID_Result> stp_GetPaymentAccountByID(Nullable<int> paymentAccountID)
        {
            var paymentAccountIDParameter = paymentAccountID.HasValue ?
                new ObjectParameter("PaymentAccountID", paymentAccountID) :
                new ObjectParameter("PaymentAccountID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_GetPaymentAccountByID_Result>("stp_GetPaymentAccountByID", paymentAccountIDParameter);
        }
    
        public virtual ObjectResult<stp_PaymentAccounts_ByUserID_Result> stp_PaymentAccounts_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_PaymentAccounts_ByUserID_Result>("stp_PaymentAccounts_ByUserID", userIDParameter);
        }
    
        public virtual int stp_Intention_Sum_ByTagID(Nullable<long> tagID, ObjectParameter sum)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Intention_Sum_ByTagID", tagIDParameter, sum);
        }
    
        public virtual int stp_Obligation_Sum_ByTagID(Nullable<long> tagID, ObjectParameter sum)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Obligation_Sum_ByTagID", tagIDParameter, sum);
        }
    
        public virtual int stp_AddTokenAction(string token, Nullable<System.DateTime> creationDate, Nullable<System.DateTime> expirationDate, string action, Nullable<long> userID)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("CreationDate", creationDate) :
                new ObjectParameter("CreationDate", typeof(System.DateTime));
    
            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(System.DateTime));
    
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_AddTokenAction", tokenParameter, creationDateParameter, expirationDateParameter, actionParameter, userIDParameter);
        }
    
        public virtual ObjectResult<stp_GetTokenAction_Result> stp_GetTokenAction(string token)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_GetTokenAction_Result>("stp_GetTokenAction", tokenParameter);
        }
    
        public virtual int stp_User_Password_Update(Nullable<long> userID, byte[] userHash, byte[] userSalt, Nullable<int> hashIterations)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var userHashParameter = userHash != null ?
                new ObjectParameter("UserHash", userHash) :
                new ObjectParameter("UserHash", typeof(byte[]));
    
            var userSaltParameter = userSalt != null ?
                new ObjectParameter("UserSalt", userSalt) :
                new ObjectParameter("UserSalt", typeof(byte[]));
    
            var hashIterationsParameter = hashIterations.HasValue ?
                new ObjectParameter("HashIterations", hashIterations) :
                new ObjectParameter("HashIterations", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_User_Password_Update", userIDParameter, userHashParameter, userSaltParameter, hashIterationsParameter);
        }
    
        public virtual ObjectResult<string> stp_GetUserEmailsAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("stp_GetUserEmailsAll");
        }
    
        public virtual ObjectResult<stp_EventList_Read_ByUserID_Result> stp_EventList_Read_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_EventList_Read_ByUserID_Result>("stp_EventList_Read_ByUserID", userIDParameter);
        }
    
        [DbFunction("exodusEntities", "fn_t_TagStats")]
        public virtual IQueryable<fn_t_TagStats_Result> fn_t_TagStats(Nullable<long> tagID)
        {
            var tagIDParameter = tagID.HasValue ?
                new ObjectParameter("TagID", tagID) :
                new ObjectParameter("TagID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_t_TagStats_Result>("[exodusEntities].[fn_t_TagStats](@TagID)", tagIDParameter);
        }
    
        public virtual ObjectResult<stp_Tags_ByUserID_Result> stp_Tags_ByUserID(Nullable<long> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_Tags_ByUserID_Result>("stp_Tags_ByUserID", userIDParameter);
        }
    }
}
