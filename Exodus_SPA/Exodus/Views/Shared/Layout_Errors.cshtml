@using Exodus.Helpers
@{
    var mainLang = PageHelper.Language;
    var mainUrl = Url.Action().Trim('/');
    mainUrl = mainUrl.StartsWith(mainLang) ? mainUrl.Substring(mainLang.Length) : mainUrl;
}
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    <style>
        body, html {
            width: 100%;
            height: 100%;
            background-color: white;
        }

        .lang-bar {
            position: fixed;
            right: 50px;
            top: 10px;
            height: 30px;
        }

        .lang-item {
            width: 20px;
            display: inline-block;
            font-size: 20px;
            font-weight: bold;
        }

            .lang-item span {
                text-decoration: underline !important;
                color: #459edb;
            }

            .lang-item span, a {
                color: black !important;
            }
    </style>
    <link rel="stylesheet" href="~/Styles/dist/css/main.css">
    <script type="text/javascript">
        var mainLanguage = "@mainLang";
        var langArray = {};
        @foreach (var elem in Exodus.Global.Localisation.GetLocalisationDic(PageHelper.Language))
        {
            @:langArray["@elem.Key"] = "@elem.Value";
        }
    </script>
</head>
<body>
    <div class="lang-bar">
        @foreach (var lang in Exodus.Global.Localisation.AvalibleLanguages)
        {
            <div class="@((lang == mainLang) ? "lang-item lang-item-active" : "lang-item")">
                <a href="@((lang == mainLang) ? "#" : String.Format("/{0}/{1}", lang, mainUrl))">@lang</a>
            </div>
        }
    </div>
    <div class="ex-welcome">
        <div class="bg-white p-4 my-4">
            @RenderBody()
        </div>
    </div>
    <script async src="~/Styles/dist/js/main.js"></script>
    <script src="~/Scripts/detect-device.min.js.js"></script>
    <script>
        @if (Exodus.Global.Global.IsMobileActive)
        {
            @:if (device.type == "mobile") { window.location.href = "@Exodus.Global.Global.MobileUrl"; }
        }
      @*if (window.location.protocol == 'http:' && window.location.hostname != 'localhost') { window.location.protocol = "https"; }*@
    </script>

</body>
</html>